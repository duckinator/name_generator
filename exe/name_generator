#!/usr/bin/env ruby

require "name_generator"

DEFAULTS = {
  "min_length" => 5,
  "max_length" => 10,
  "debug" => false,
  "num_words" => 1,
}

def parse_args(args)
  arguments = DEFAULTS.clone

  args.each do |arg|
    key, value = arg.split('=', 2)
    # You can technically do `name_generator min-length=5` and it'll work.
    # I don't really care enough to fix this, though.
    key = key.gsub(/^--/, '').gsub('-', '_')

    if value.nil?
      # HACK: yes, I know this isn't technically the correct usage of ArgumentError.
      raise ArgumentError, "invalid argument: #{arg} (no value provided)"
    elsif !arguments.has_key?(key)
      raise ArgumentError, "unknown argument: #{key}"
    end

    arguments[key] = value
  end

  arguments
end

if ARGV.include?('--help') || ARGV.include?('-h')
  abort "#{$0} [ARGS]\n\nDefault arguments:\n#{DEFAULTS.map {|k, v| "  #{k}=#{v}"}.join("\n")}"
end

options = parse_args(ARGV)

Integer(options["num_words"]).times do
  puts NameGenerator.call(options)
end
